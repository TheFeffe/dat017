
./Debug/uppg41.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
 */
void startup(void) __attribute__((naked)) __attribute__((section (".start_section")) );

void startup ( void )
{
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f814 	bl	20000030 <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <app_init>:

void app_init(void){
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	setup_for_keypad(GPIO_D);
20000014:	4b05      	ldr	r3, [pc, #20]	; (2000002c <app_init+0x1c>)
20000016:	0018      	movs	r0, r3
20000018:	f000 f81e 	bl	20000058 <setup_for_keypad>
	setup_for_seg_disp(GPIO_D);
2000001c:	4b03      	ldr	r3, [pc, #12]	; (2000002c <app_init+0x1c>)
2000001e:	0018      	movs	r0, r3
20000020:	f000 f84c 	bl	200000bc <setup_for_seg_disp>
}
20000024:	46c0      	nop			; (mov r8, r8)
20000026:	46bd      	mov	sp, r7
20000028:	bd80      	pop	{r7, pc}
2000002a:	46c0      	nop			; (mov r8, r8)
2000002c:	40020c00 	andmi	r0, r2, r0, lsl #24

20000030 <main>:

void main(void)
{
20000030:	b590      	push	{r4, r7, lr}
20000032:	b083      	sub	sp, #12
20000034:	af00      	add	r7, sp, #0
	app_init();
20000036:	f7ff ffeb 	bl	20000010 <app_init>
	unsigned char pressed_button;
	while(1){
		pressed_button = keyb();
2000003a:	1dfc      	adds	r4, r7, #7
2000003c:	f000 f870 	bl	20000120 <keyb>
20000040:	0003      	movs	r3, r0
20000042:	7023      	strb	r3, [r4, #0]
		out7seg(GPIO_D, pressed_button);
20000044:	1dfb      	adds	r3, r7, #7
20000046:	781b      	ldrb	r3, [r3, #0]
20000048:	4a02      	ldr	r2, [pc, #8]	; (20000054 <main+0x24>)
2000004a:	0019      	movs	r1, r3
2000004c:	0010      	movs	r0, r2
2000004e:	f000 f8af 	bl	200001b0 <out7seg>
		pressed_button = keyb();
20000052:	e7f2      	b.n	2000003a <main+0xa>
20000054:	40020c00 	andmi	r0, r2, r0, lsl #24

20000058 <setup_for_keypad>:
#include "gpio.h"

void setup_for_keypad(GPIO* _gpio)
{
20000058:	b580      	push	{r7, lr}
2000005a:	b082      	sub	sp, #8
2000005c:	af00      	add	r7, sp, #0
2000005e:	6078      	str	r0, [r7, #4]
	// Sätt pinnar 15-12 till utportar
	// och pinnar 11-8 till inportar.
    _gpio->moder &= 0x0000FFFF;
20000060:	687b      	ldr	r3, [r7, #4]
20000062:	681b      	ldr	r3, [r3, #0]
20000064:	041b      	lsls	r3, r3, #16
20000066:	0c1a      	lsrs	r2, r3, #16
20000068:	687b      	ldr	r3, [r7, #4]
2000006a:	601a      	str	r2, [r3, #0]
    _gpio->moder |= 0x5500FFFF;
2000006c:	687b      	ldr	r3, [r7, #4]
2000006e:	681b      	ldr	r3, [r3, #0]
20000070:	4a11      	ldr	r2, [pc, #68]	; (200000b8 <setup_for_keypad+0x60>)
20000072:	431a      	orrs	r2, r3
20000074:	687b      	ldr	r3, [r7, #4]
20000076:	601a      	str	r2, [r3, #0]
	
	// Sätt pinnar 15-12 till "push-pull"
	// och pinnar 11-8 till "open drain".
    _gpio->otyper &= 0xFFFF00FF;
20000078:	687b      	ldr	r3, [r7, #4]
2000007a:	889b      	ldrh	r3, [r3, #4]
2000007c:	22ff      	movs	r2, #255	; 0xff
2000007e:	4013      	ands	r3, r2
20000080:	b29a      	uxth	r2, r3
20000082:	687b      	ldr	r3, [r7, #4]
20000084:	809a      	strh	r2, [r3, #4]
    _gpio->otyper |= 0x00000F00;
20000086:	687b      	ldr	r3, [r7, #4]
20000088:	889b      	ldrh	r3, [r3, #4]
2000008a:	22f0      	movs	r2, #240	; 0xf0
2000008c:	0112      	lsls	r2, r2, #4
2000008e:	4313      	orrs	r3, r2
20000090:	b29a      	uxth	r2, r3
20000092:	687b      	ldr	r3, [r7, #4]
20000094:	809a      	strh	r2, [r3, #4]

	// Sätt pinnar 15-12 till "floating"
	// och pinnar 11-8 till "pull-down"
    _gpio->pupdr &= 0x0000FFFF;
20000096:	687b      	ldr	r3, [r7, #4]
20000098:	68db      	ldr	r3, [r3, #12]
2000009a:	041b      	lsls	r3, r3, #16
2000009c:	0c1a      	lsrs	r2, r3, #16
2000009e:	687b      	ldr	r3, [r7, #4]
200000a0:	60da      	str	r2, [r3, #12]
    _gpio->pupdr |= 0x00AA0000;
200000a2:	687b      	ldr	r3, [r7, #4]
200000a4:	68db      	ldr	r3, [r3, #12]
200000a6:	22aa      	movs	r2, #170	; 0xaa
200000a8:	0412      	lsls	r2, r2, #16
200000aa:	431a      	orrs	r2, r3
200000ac:	687b      	ldr	r3, [r7, #4]
200000ae:	60da      	str	r2, [r3, #12]
}
200000b0:	46c0      	nop			; (mov r8, r8)
200000b2:	46bd      	mov	sp, r7
200000b4:	b002      	add	sp, #8
200000b6:	bd80      	pop	{r7, pc}
200000b8:	5500ffff 	strpl	pc, [r0, #-4095]	; 0xfffff001

200000bc <setup_for_seg_disp>:

void setup_for_seg_disp(GPIO* _gpio) 
{
200000bc:	b580      	push	{r7, lr}
200000be:	b082      	sub	sp, #8
200000c0:	af00      	add	r7, sp, #0
200000c2:	6078      	str	r0, [r7, #4]
	// Sätt pinnar 7-0 till utportar
	_gpio->moder &= 0xFFFF0000;
200000c4:	687b      	ldr	r3, [r7, #4]
200000c6:	681b      	ldr	r3, [r3, #0]
200000c8:	0c1b      	lsrs	r3, r3, #16
200000ca:	041a      	lsls	r2, r3, #16
200000cc:	687b      	ldr	r3, [r7, #4]
200000ce:	601a      	str	r2, [r3, #0]
	_gpio->moder |= 0x00005555;
200000d0:	687b      	ldr	r3, [r7, #4]
200000d2:	681b      	ldr	r3, [r3, #0]
200000d4:	4a11      	ldr	r2, [pc, #68]	; (2000011c <setup_for_seg_disp+0x60>)
200000d6:	431a      	orrs	r2, r3
200000d8:	687b      	ldr	r3, [r7, #4]
200000da:	601a      	str	r2, [r3, #0]
	
	// Sätt pinnar 7-0 till "push-pull"
	_gpio->otyper &= 0xFFFFFF00;
200000dc:	687b      	ldr	r3, [r7, #4]
200000de:	889b      	ldrh	r3, [r3, #4]
200000e0:	22ff      	movs	r2, #255	; 0xff
200000e2:	4393      	bics	r3, r2
200000e4:	b29a      	uxth	r2, r3
200000e6:	687b      	ldr	r3, [r7, #4]
200000e8:	809a      	strh	r2, [r3, #4]
	_gpio->otyper |= 0x000000FF;
200000ea:	687b      	ldr	r3, [r7, #4]
200000ec:	889b      	ldrh	r3, [r3, #4]
200000ee:	22ff      	movs	r2, #255	; 0xff
200000f0:	4313      	orrs	r3, r2
200000f2:	b29a      	uxth	r2, r3
200000f4:	687b      	ldr	r3, [r7, #4]
200000f6:	809a      	strh	r2, [r3, #4]
	
	// Sätter pinnar 4-0 till "pull-down"
	_gpio->pupdr &= 0xFFFFFF00;
200000f8:	687b      	ldr	r3, [r7, #4]
200000fa:	68db      	ldr	r3, [r3, #12]
200000fc:	22ff      	movs	r2, #255	; 0xff
200000fe:	4393      	bics	r3, r2
20000100:	001a      	movs	r2, r3
20000102:	687b      	ldr	r3, [r7, #4]
20000104:	60da      	str	r2, [r3, #12]
	_gpio->pupdr |= 0x000000AA;
20000106:	687b      	ldr	r3, [r7, #4]
20000108:	68db      	ldr	r3, [r3, #12]
2000010a:	22aa      	movs	r2, #170	; 0xaa
2000010c:	431a      	orrs	r2, r3
2000010e:	687b      	ldr	r3, [r7, #4]
20000110:	60da      	str	r2, [r3, #12]
}
20000112:	46c0      	nop			; (mov r8, r8)
20000114:	46bd      	mov	sp, r7
20000116:	b002      	add	sp, #8
20000118:	bd80      	pop	{r7, pc}
2000011a:	46c0      	nop			; (mov r8, r8)
2000011c:	00005555 	andeq	r5, r0, r5, asr r5

20000120 <keyb>:

unsigned char keyb(void)
{
20000120:	b590      	push	{r4, r7, lr}
20000122:	b087      	sub	sp, #28
20000124:	af00      	add	r7, sp, #0
	unsigned char keys[] = {
20000126:	1d3b      	adds	r3, r7, #4
20000128:	4a1f      	ldr	r2, [pc, #124]	; (200001a8 <keyb+0x88>)
2000012a:	ca13      	ldmia	r2!, {r0, r1, r4}
2000012c:	c313      	stmia	r3!, {r0, r1, r4}
2000012e:	6812      	ldr	r2, [r2, #0]
20000130:	601a      	str	r2, [r3, #0]
		4,  5,  6,  11,
		7,  8,  9,  12,
		14, 0,  15, 13
	};
	unsigned char row, col;
	for(row = 0; row < 4; row++) {
20000132:	2317      	movs	r3, #23
20000134:	18fb      	adds	r3, r7, r3
20000136:	2200      	movs	r2, #0
20000138:	701a      	strb	r2, [r3, #0]
2000013a:	e02a      	b.n	20000192 <keyb+0x72>
		deactivate_rows(GPIO_D);
2000013c:	4b1b      	ldr	r3, [pc, #108]	; (200001ac <keyb+0x8c>)
2000013e:	0018      	movs	r0, r3
20000140:	f000 f886 	bl	20000250 <deactivate_rows>
		activate_row(GPIO_D, row);
20000144:	2317      	movs	r3, #23
20000146:	18fb      	adds	r3, r7, r3
20000148:	781b      	ldrb	r3, [r3, #0]
2000014a:	4a18      	ldr	r2, [pc, #96]	; (200001ac <keyb+0x8c>)
2000014c:	0019      	movs	r1, r3
2000014e:	0010      	movs	r0, r2
20000150:	f000 f856 	bl	20000200 <activate_row>
		col = read_col(GPIO_D);
20000154:	2316      	movs	r3, #22
20000156:	18fc      	adds	r4, r7, r3
20000158:	4b14      	ldr	r3, [pc, #80]	; (200001ac <keyb+0x8c>)
2000015a:	0018      	movs	r0, r3
2000015c:	f000 f883 	bl	20000266 <read_col>
20000160:	0003      	movs	r3, r0
20000162:	7023      	strb	r3, [r4, #0]
		if(col != 0xFF) {
20000164:	2316      	movs	r3, #22
20000166:	18fb      	adds	r3, r7, r3
20000168:	781b      	ldrb	r3, [r3, #0]
2000016a:	2bff      	cmp	r3, #255	; 0xff
2000016c:	d00a      	beq.n	20000184 <keyb+0x64>
			return keys[ 4 * row + col];
2000016e:	2317      	movs	r3, #23
20000170:	18fb      	adds	r3, r7, r3
20000172:	781b      	ldrb	r3, [r3, #0]
20000174:	009a      	lsls	r2, r3, #2
20000176:	2316      	movs	r3, #22
20000178:	18fb      	adds	r3, r7, r3
2000017a:	781b      	ldrb	r3, [r3, #0]
2000017c:	18d3      	adds	r3, r2, r3
2000017e:	1d3a      	adds	r2, r7, #4
20000180:	5cd3      	ldrb	r3, [r2, r3]
20000182:	e00c      	b.n	2000019e <keyb+0x7e>
	for(row = 0; row < 4; row++) {
20000184:	2317      	movs	r3, #23
20000186:	18fb      	adds	r3, r7, r3
20000188:	781a      	ldrb	r2, [r3, #0]
2000018a:	2317      	movs	r3, #23
2000018c:	18fb      	adds	r3, r7, r3
2000018e:	3201      	adds	r2, #1
20000190:	701a      	strb	r2, [r3, #0]
20000192:	2317      	movs	r3, #23
20000194:	18fb      	adds	r3, r7, r3
20000196:	781b      	ldrb	r3, [r3, #0]
20000198:	2b03      	cmp	r3, #3
2000019a:	d9cf      	bls.n	2000013c <keyb+0x1c>
		}
	}
	return 0xFF;
2000019c:	23ff      	movs	r3, #255	; 0xff
}
2000019e:	0018      	movs	r0, r3
200001a0:	46bd      	mov	sp, r7
200001a2:	b007      	add	sp, #28
200001a4:	bd90      	pop	{r4, r7, pc}
200001a6:	46c0      	nop			; (mov r8, r8)
200001a8:	20000358 	andcs	r0, r0, r8, asr r3
200001ac:	40020c00 	andmi	r0, r2, r0, lsl #24

200001b0 <out7seg>:

void out7seg(GPIO* _gpio, unsigned char c)
{
200001b0:	b590      	push	{r4, r7, lr}
200001b2:	b08b      	sub	sp, #44	; 0x2c
200001b4:	af00      	add	r7, sp, #0
200001b6:	6078      	str	r0, [r7, #4]
200001b8:	000a      	movs	r2, r1
200001ba:	1cfb      	adds	r3, r7, #3
200001bc:	701a      	strb	r2, [r3, #0]
    unsigned short result[] = { 
200001be:	2308      	movs	r3, #8
200001c0:	18fb      	adds	r3, r7, r3
200001c2:	4a0e      	ldr	r2, [pc, #56]	; (200001fc <out7seg+0x4c>)
200001c4:	ca13      	ldmia	r2!, {r0, r1, r4}
200001c6:	c313      	stmia	r3!, {r0, r1, r4}
200001c8:	ca13      	ldmia	r2!, {r0, r1, r4}
200001ca:	c313      	stmia	r3!, {r0, r1, r4}
200001cc:	ca03      	ldmia	r2!, {r0, r1}
200001ce:	c303      	stmia	r3!, {r0, r1}
		0x5E, // D
		0x80, // E
		0x76  // F
	};

    if(c > 0xF) {
200001d0:	1cfb      	adds	r3, r7, #3
200001d2:	781b      	ldrb	r3, [r3, #0]
200001d4:	2b0f      	cmp	r3, #15
200001d6:	d903      	bls.n	200001e0 <out7seg+0x30>
		_gpio->odrLow = 0x00;
200001d8:	687b      	ldr	r3, [r7, #4]
200001da:	2200      	movs	r2, #0
200001dc:	751a      	strb	r2, [r3, #20]
    } else {
		_gpio->odrLow = result[c];
    }
}
200001de:	e008      	b.n	200001f2 <out7seg+0x42>
		_gpio->odrLow = result[c];
200001e0:	1cfb      	adds	r3, r7, #3
200001e2:	781a      	ldrb	r2, [r3, #0]
200001e4:	2308      	movs	r3, #8
200001e6:	18fb      	adds	r3, r7, r3
200001e8:	0052      	lsls	r2, r2, #1
200001ea:	5ad3      	ldrh	r3, [r2, r3]
200001ec:	b2da      	uxtb	r2, r3
200001ee:	687b      	ldr	r3, [r7, #4]
200001f0:	751a      	strb	r2, [r3, #20]
}
200001f2:	46c0      	nop			; (mov r8, r8)
200001f4:	46bd      	mov	sp, r7
200001f6:	b00b      	add	sp, #44	; 0x2c
200001f8:	bd90      	pop	{r4, r7, pc}
200001fa:	46c0      	nop			; (mov r8, r8)
200001fc:	20000368 	andcs	r0, r0, r8, ror #6

20000200 <activate_row>:

void activate_row(GPIO* _gpio, unsigned char row) 
{
20000200:	b580      	push	{r7, lr}
20000202:	b082      	sub	sp, #8
20000204:	af00      	add	r7, sp, #0
20000206:	6078      	str	r0, [r7, #4]
20000208:	000a      	movs	r2, r1
2000020a:	1cfb      	adds	r3, r7, #3
2000020c:	701a      	strb	r2, [r3, #0]
	switch(row){
2000020e:	1cfb      	adds	r3, r7, #3
20000210:	781b      	ldrb	r3, [r3, #0]
20000212:	2b01      	cmp	r3, #1
20000214:	d00c      	beq.n	20000230 <activate_row+0x30>
20000216:	dc02      	bgt.n	2000021e <activate_row+0x1e>
20000218:	2b00      	cmp	r3, #0
2000021a:	d005      	beq.n	20000228 <activate_row+0x28>
		case 0: _gpio->odrHigh = 0x10; break;
		case 1: _gpio->odrHigh = 0x20; break;
		case 2: _gpio->odrHigh = 0x40; break;
		case 3: _gpio->odrHigh = 0x80; break;
	}
}
2000021c:	e014      	b.n	20000248 <activate_row+0x48>
	switch(row){
2000021e:	2b02      	cmp	r3, #2
20000220:	d00a      	beq.n	20000238 <activate_row+0x38>
20000222:	2b03      	cmp	r3, #3
20000224:	d00c      	beq.n	20000240 <activate_row+0x40>
}
20000226:	e00f      	b.n	20000248 <activate_row+0x48>
		case 0: _gpio->odrHigh = 0x10; break;
20000228:	687b      	ldr	r3, [r7, #4]
2000022a:	2210      	movs	r2, #16
2000022c:	755a      	strb	r2, [r3, #21]
2000022e:	e00b      	b.n	20000248 <activate_row+0x48>
		case 1: _gpio->odrHigh = 0x20; break;
20000230:	687b      	ldr	r3, [r7, #4]
20000232:	2220      	movs	r2, #32
20000234:	755a      	strb	r2, [r3, #21]
20000236:	e007      	b.n	20000248 <activate_row+0x48>
		case 2: _gpio->odrHigh = 0x40; break;
20000238:	687b      	ldr	r3, [r7, #4]
2000023a:	2240      	movs	r2, #64	; 0x40
2000023c:	755a      	strb	r2, [r3, #21]
2000023e:	e003      	b.n	20000248 <activate_row+0x48>
		case 3: _gpio->odrHigh = 0x80; break;
20000240:	687b      	ldr	r3, [r7, #4]
20000242:	2280      	movs	r2, #128	; 0x80
20000244:	755a      	strb	r2, [r3, #21]
20000246:	46c0      	nop			; (mov r8, r8)
}
20000248:	46c0      	nop			; (mov r8, r8)
2000024a:	46bd      	mov	sp, r7
2000024c:	b002      	add	sp, #8
2000024e:	bd80      	pop	{r7, pc}

20000250 <deactivate_rows>:

void deactivate_rows(GPIO* _gpio)
{
20000250:	b580      	push	{r7, lr}
20000252:	b082      	sub	sp, #8
20000254:	af00      	add	r7, sp, #0
20000256:	6078      	str	r0, [r7, #4]
	_gpio->odrHigh = 0x00;
20000258:	687b      	ldr	r3, [r7, #4]
2000025a:	2200      	movs	r2, #0
2000025c:	755a      	strb	r2, [r3, #21]
}
2000025e:	46c0      	nop			; (mov r8, r8)
20000260:	46bd      	mov	sp, r7
20000262:	b002      	add	sp, #8
20000264:	bd80      	pop	{r7, pc}

20000266 <read_col>:

unsigned char read_col(GPIO* _gpio)
{
20000266:	b580      	push	{r7, lr}
20000268:	b082      	sub	sp, #8
2000026a:	af00      	add	r7, sp, #0
2000026c:	6078      	str	r0, [r7, #4]
	if(_gpio->idrHigh & 0x01) return 0;
2000026e:	687b      	ldr	r3, [r7, #4]
20000270:	7c5b      	ldrb	r3, [r3, #17]
20000272:	001a      	movs	r2, r3
20000274:	2301      	movs	r3, #1
20000276:	4013      	ands	r3, r2
20000278:	d001      	beq.n	2000027e <read_col+0x18>
2000027a:	2300      	movs	r3, #0
2000027c:	e018      	b.n	200002b0 <read_col+0x4a>
	if(_gpio->idrHigh & 0x02) return 1;
2000027e:	687b      	ldr	r3, [r7, #4]
20000280:	7c5b      	ldrb	r3, [r3, #17]
20000282:	001a      	movs	r2, r3
20000284:	2302      	movs	r3, #2
20000286:	4013      	ands	r3, r2
20000288:	d001      	beq.n	2000028e <read_col+0x28>
2000028a:	2301      	movs	r3, #1
2000028c:	e010      	b.n	200002b0 <read_col+0x4a>
	if(_gpio->idrHigh & 0x04) return 2;
2000028e:	687b      	ldr	r3, [r7, #4]
20000290:	7c5b      	ldrb	r3, [r3, #17]
20000292:	001a      	movs	r2, r3
20000294:	2304      	movs	r3, #4
20000296:	4013      	ands	r3, r2
20000298:	d001      	beq.n	2000029e <read_col+0x38>
2000029a:	2302      	movs	r3, #2
2000029c:	e008      	b.n	200002b0 <read_col+0x4a>
	if(_gpio->idrHigh & 0x08) return 3;
2000029e:	687b      	ldr	r3, [r7, #4]
200002a0:	7c5b      	ldrb	r3, [r3, #17]
200002a2:	001a      	movs	r2, r3
200002a4:	2308      	movs	r3, #8
200002a6:	4013      	ands	r3, r2
200002a8:	d001      	beq.n	200002ae <read_col+0x48>
200002aa:	2303      	movs	r3, #3
200002ac:	e000      	b.n	200002b0 <read_col+0x4a>
	return 0xFF;
200002ae:	23ff      	movs	r3, #255	; 0xff
200002b0:	0018      	movs	r0, r3
200002b2:	46bd      	mov	sp, r7
200002b4:	b002      	add	sp, #8
200002b6:	bd80      	pop	{r7, pc}

200002b8 <delay_250ns>:
/// Delays the thread 250 ns.
///
/// NOTE: 		The routine is not exact but takes a MINIMUM of 
///				250 ns.
void delay_250ns( void )
{
200002b8:	b580      	push	{r7, lr}
200002ba:	af00      	add	r7, sp, #0
	// ----------------------
	// = Återställ räknaren =
	// ----------------------
	// Nollställ register STK_CTRL.
	SYS_TICK->STK_CTRL = 0;
200002bc:	4b0c      	ldr	r3, [pc, #48]	; (200002f0 <delay_250ns+0x38>)
200002be:	2200      	movs	r2, #0
200002c0:	601a      	str	r2, [r3, #0]
	// = Ladda in räknarvärdet =
	// -------------------------
	// 		168 ticks/µs 		* 1000
	// => 	168'000 ticks/ns 	/ 4
	// => 	42'000 ticks for a wait of 250 ns.
	SYS_TICK->STK_LOAD = 0x0000A410;
200002c2:	4b0b      	ldr	r3, [pc, #44]	; (200002f0 <delay_250ns+0x38>)
200002c4:	4a0b      	ldr	r2, [pc, #44]	; (200002f4 <delay_250ns+0x3c>)
200002c6:	605a      	str	r2, [r3, #4]
	
	// -----------------------------
	// = Nollställ räknarregistret =
	// -----------------------------
	// Nolställ register STK_VAL.
	SYS_TICK->STK_VAL = 0;
200002c8:	4b09      	ldr	r3, [pc, #36]	; (200002f0 <delay_250ns+0x38>)
200002ca:	2200      	movs	r2, #0
200002cc:	609a      	str	r2, [r3, #8]
	// ---------------------
	// = Start om räknaren =
	// ---------------------
	// Ettställ bitar 2 och 0.
	// Nollställ bitar 31-3 och 1.
	SYS_TICK->STK_CTRL = 0x00000005;
200002ce:	4b08      	ldr	r3, [pc, #32]	; (200002f0 <delay_250ns+0x38>)
200002d0:	2205      	movs	r2, #5
200002d2:	601a      	str	r2, [r3, #0]
	
	// -----------------------------------------
	// = Vänta tills räknaren har räknat klart =
	// -----------------------------------------
	// Väntar tills COUNTFLAG = 1.
	while(SYS_TICK->STK_CTRL & 0x00010000) { }
200002d4:	46c0      	nop			; (mov r8, r8)
200002d6:	4b06      	ldr	r3, [pc, #24]	; (200002f0 <delay_250ns+0x38>)
200002d8:	681a      	ldr	r2, [r3, #0]
200002da:	2380      	movs	r3, #128	; 0x80
200002dc:	025b      	lsls	r3, r3, #9
200002de:	4013      	ands	r3, r2
200002e0:	d1f9      	bne.n	200002d6 <delay_250ns+0x1e>
	
	// ----------------------
	// = Återställ räknaren =
	// ----------------------
	// Nollställ register STK_CTRL.
	SYS_TICK->STK_CTRL = 0;
200002e2:	4b03      	ldr	r3, [pc, #12]	; (200002f0 <delay_250ns+0x38>)
200002e4:	2200      	movs	r2, #0
200002e6:	601a      	str	r2, [r3, #0]
}
200002e8:	46c0      	nop			; (mov r8, r8)
200002ea:	46bd      	mov	sp, r7
200002ec:	bd80      	pop	{r7, pc}
200002ee:	46c0      	nop			; (mov r8, r8)
200002f0:	e000e010 	and	lr, r0, r0, lsl r0
200002f4:	0000a410 	andeq	sl, r0, r0, lsl r4

200002f8 <delay_mikro>:
///				'delay_250ns()' function is suboptimal as you reset
///				the STK_CTRL register twice between every iteration
///				of the for loop.
/// 			
void delay_mikro( unsigned int us )
{
200002f8:	b580      	push	{r7, lr}
200002fa:	b084      	sub	sp, #16
200002fc:	af00      	add	r7, sp, #0
200002fe:	6078      	str	r0, [r7, #4]
	// Convert the given time to a number of 250 ns delays.
	unsigned int delays = us * 4;
20000300:	687b      	ldr	r3, [r7, #4]
20000302:	009b      	lsls	r3, r3, #2
20000304:	60bb      	str	r3, [r7, #8]
	unsigned int i;
	for(i = 0; i < delays; i++)
20000306:	2300      	movs	r3, #0
20000308:	60fb      	str	r3, [r7, #12]
2000030a:	e004      	b.n	20000316 <delay_mikro+0x1e>
	{
		delay_250ns();
2000030c:	f7ff ffd4 	bl	200002b8 <delay_250ns>
	for(i = 0; i < delays; i++)
20000310:	68fb      	ldr	r3, [r7, #12]
20000312:	3301      	adds	r3, #1
20000314:	60fb      	str	r3, [r7, #12]
20000316:	68fa      	ldr	r2, [r7, #12]
20000318:	68bb      	ldr	r3, [r7, #8]
2000031a:	429a      	cmp	r2, r3
2000031c:	d3f6      	bcc.n	2000030c <delay_mikro+0x14>
	}
}
2000031e:	46c0      	nop			; (mov r8, r8)
20000320:	46bd      	mov	sp, r7
20000322:	b004      	add	sp, #16
20000324:	bd80      	pop	{r7, pc}

20000326 <delay_milli>:
///				'delay_250ns()' function is suboptimal as you reset
///				the 'STK_CTRL' register twice between every iteration
///				of the for loop.
/// 			
void delay_milli( unsigned int ms )
{
20000326:	b580      	push	{r7, lr}
20000328:	b084      	sub	sp, #16
2000032a:	af00      	add	r7, sp, #0
2000032c:	6078      	str	r0, [r7, #4]
	// Convert the given time to a number of 250 ns delays.
	unsigned int delays = ms * 4000;
2000032e:	687b      	ldr	r3, [r7, #4]
20000330:	22fa      	movs	r2, #250	; 0xfa
20000332:	0112      	lsls	r2, r2, #4
20000334:	4353      	muls	r3, r2
20000336:	60bb      	str	r3, [r7, #8]
	unsigned int i;
	for(i = 0; i < delays; i++)
20000338:	2300      	movs	r3, #0
2000033a:	60fb      	str	r3, [r7, #12]
2000033c:	e004      	b.n	20000348 <delay_milli+0x22>
	{
		delay_250ns();
2000033e:	f7ff ffbb 	bl	200002b8 <delay_250ns>
	for(i = 0; i < delays; i++)
20000342:	68fb      	ldr	r3, [r7, #12]
20000344:	3301      	adds	r3, #1
20000346:	60fb      	str	r3, [r7, #12]
20000348:	68fa      	ldr	r2, [r7, #12]
2000034a:	68bb      	ldr	r3, [r7, #8]
2000034c:	429a      	cmp	r2, r3
2000034e:	d3f6      	bcc.n	2000033e <delay_milli+0x18>
	}
20000350:	46c0      	nop			; (mov r8, r8)
20000352:	46bd      	mov	sp, r7
20000354:	b004      	add	sp, #16
20000356:	bd80      	pop	{r7, pc}
20000358:	0a030201 	beq	200c0b64 <delay_milli+0xc083e>
2000035c:	0b060504 	bleq	20181774 <delay_milli+0x18144e>
20000360:	0c090807 	stceq	8, cr0, [r9], {7}
20000364:	0d0f000e 	stceq	0, cr0, [pc, #-56]	; 20000334 <delay_milli+0xe>
20000368:	0006003f 	andeq	r0, r6, pc, lsr r0
2000036c:	004f005b 	subeq	r0, pc, fp, asr r0	; <UNPREDICTABLE>
20000370:	006d0066 	rsbeq	r0, sp, r6, rrx
20000374:	0007007d 	andeq	r0, r7, sp, ror r0
20000378:	006f007f 	rsbeq	r0, pc, pc, ror r0	; <UNPREDICTABLE>
2000037c:	007c0077 	rsbseq	r0, ip, r7, ror r0
20000380:	005e0058 	subseq	r0, lr, r8, asr r0
20000384:	00760080 	rsbseq	r0, r6, r0, lsl #1

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	00000184 	andeq	r0, r0, r4, lsl #3
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000049 	andeq	r0, r0, r9, asr #32
  10:	0001770c 	andeq	r7, r1, ip, lsl #14
	...
  20:	06010200 	streq	r0, [r1], -r0, lsl #4
  24:	000000e3 	andeq	r0, r0, r3, ror #1
  28:	00000e03 	andeq	r0, r0, r3, lsl #28
  2c:	332b0200 			; <UNDEFINED> instruction: 0x332b0200
  30:	02000000 	andeq	r0, r0, #0
  34:	00e10801 	rsceq	r0, r1, r1, lsl #16
  38:	02020000 	andeq	r0, r2, #0
  3c:	0001b805 	andeq	fp, r1, r5, lsl #16
  40:	01280300 			; <UNDEFINED> instruction: 0x01280300
  44:	39020000 	stmdbcc	r2, {}	; <UNPREDICTABLE>
  48:	0000004c 	andeq	r0, r0, ip, asr #32
  4c:	04070202 	streq	r0, [r7], #-514	; 0xfffffdfe
  50:	02000001 	andeq	r0, r0, #1
  54:	00050504 	andeq	r0, r5, r4, lsl #10
  58:	33030000 	movwcc	r0, #12288	; 0x3000
  5c:	02000001 	andeq	r0, r0, #1
  60:	0000654f 	andeq	r6, r0, pc, asr #10
  64:	07040200 	streq	r0, [r4, -r0, lsl #4]
  68:	0000014e 	andeq	r0, r0, lr, asr #2
  6c:	00050802 	andeq	r0, r5, r2, lsl #16
  70:	02000000 	andeq	r0, r0, #0
  74:	01490708 	cmpeq	r9, r8, lsl #14
  78:	04040000 	streq	r0, [r4], #-0
  7c:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
  80:	07040200 	streq	r0, [r4, -r0, lsl #4]
  84:	00000153 	andeq	r0, r0, r3, asr r1
  88:	00001003 	andeq	r1, r0, r3
  8c:	28180300 	ldmdacs	r8, {r8, r9}
  90:	03000000 	movweq	r0, #0
  94:	0000012a 	andeq	r0, r0, sl, lsr #2
  98:	00412403 	subeq	r2, r1, r3, lsl #8
  9c:	35030000 	strcc	r0, [r3, #-0]
  a0:	03000001 	movweq	r0, #1
  a4:	00005a30 	andeq	r5, r0, r0, lsr sl
  a8:	04180500 	ldreq	r0, [r8], #-1280	; 0xfffffb00
  ac:	00013609 	andeq	r3, r1, r9, lsl #12
  b0:	01c20600 	biceq	r0, r2, r0, lsl #12
  b4:	0a040000 	beq	1000bc <startup-0x1fefff44>
  b8:	0000009e 	muleq	r0, lr, r0
  bc:	002f0600 	eoreq	r0, pc, r0, lsl #12
  c0:	0b040000 	bleq	1000c8 <startup-0x1fefff38>
  c4:	00000093 	muleq	r0, r3, r0
  c8:	003e0604 	eorseq	r0, lr, r4, lsl #12
  cc:	0c040000 	stceq	0, cr0, [r4], {-0}
  d0:	00000093 	muleq	r0, r3, r0
  d4:	00270606 	eoreq	r0, r7, r6, lsl #12
  d8:	0d040000 	stceq	0, cr0, [r4, #-0]
  dc:	0000009e 	muleq	r0, lr, r0
  e0:	013e0608 	teqeq	lr, r8, lsl #12
  e4:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
  e8:	0000009e 	muleq	r0, lr, r0
  ec:	01b1060c 			; <UNDEFINED> instruction: 0x01b1060c
  f0:	0f040000 	svceq	0x00040000
  f4:	00000088 	andeq	r0, r0, r8, lsl #1
  f8:	01670610 	cmneq	r7, r0, lsl r6
  fc:	10040000 	andne	r0, r4, r0
 100:	00000088 	andeq	r0, r0, r8, lsl #1
 104:	011c0611 	tsteq	ip, r1, lsl r6
 108:	11040000 	mrsne	r0, (UNDEF: 4)
 10c:	00000093 	muleq	r0, r3, r0
 110:	01600612 	cmneq	r0, r2, lsl r6
 114:	12040000 	andne	r0, r4, #0
 118:	00000088 	andeq	r0, r0, r8, lsl #1
 11c:	00360614 	eorseq	r0, r6, r4, lsl r6
 120:	13040000 	movwne	r0, #16384	; 0x4000
 124:	00000088 	andeq	r0, r0, r8, lsl #1
 128:	00ef0615 	rsceq	r0, pc, r5, lsl r6	; <UNPREDICTABLE>
 12c:	14040000 	strne	r0, [r4], #-0
 130:	00000093 	muleq	r0, r3, r0
 134:	17030016 	smladne	r3, r6, r0, r0
 138:	04000001 	streq	r0, [r0], #-1
 13c:	0000a915 	andeq	sl, r0, r5, lsl r9
 140:	01440700 	cmpeq	r4, r0, lsl #14
 144:	1a010000 	bne	4014c <startup-0x1ffbfeb4>
 148:	20000030 	andcs	r0, r0, r0, lsr r0
 14c:	00000028 	andeq	r0, r0, r8, lsr #32
 150:	01659c01 	cmneq	r5, r1, lsl #24
 154:	18080000 	stmdane	r8, {}	; <UNPREDICTABLE>
 158:	01000000 	mrseq	r0, (UNDEF: 0)
 15c:	0000331d 	andeq	r3, r0, sp, lsl r3
 160:	6f910200 	svcvs	0x00910200
 164:	00fb0900 	rscseq	r0, fp, r0, lsl #18
 168:	15010000 	strne	r0, [r1, #-0]
 16c:	20000010 	andcs	r0, r0, r0, lsl r0
 170:	00000020 	andeq	r0, r0, r0, lsr #32
 174:	6f0a9c01 	svcvs	0x000a9c01
 178:	01000001 	tsteq	r0, r1
 17c:	0000000b 	andeq	r0, r0, fp
 180:	00000c20 	andeq	r0, r0, r0, lsr #24
 184:	009c0100 	addseq	r0, ip, r0, lsl #2
 188:	000002af 	andeq	r0, r0, pc, lsr #5
 18c:	00aa0004 	adceq	r0, sl, r4
 190:	01040000 	mrseq	r0, (UNDEF: 4)
 194:	00000049 	andeq	r0, r0, r9, asr #32
 198:	0001f40c 	andeq	pc, r1, ip, lsl #8
 19c:	00005800 	andeq	r5, r0, r0, lsl #16
 1a0:	00026020 	andeq	r6, r2, r0, lsr #32
 1a4:	00013300 	andeq	r3, r1, r0, lsl #6
 1a8:	06010200 	streq	r0, [r1], -r0, lsl #4
 1ac:	000000e3 	andeq	r0, r0, r3, ror #1
 1b0:	00000e03 	andeq	r0, r0, r3, lsl #28
 1b4:	332b0200 			; <UNDEFINED> instruction: 0x332b0200
 1b8:	02000000 	andeq	r0, r0, #0
 1bc:	00e10801 	rsceq	r0, r1, r1, lsl #16
 1c0:	02020000 	andeq	r0, r2, #0
 1c4:	0001b805 	andeq	fp, r1, r5, lsl #16
 1c8:	01280300 			; <UNDEFINED> instruction: 0x01280300
 1cc:	39020000 	stmdbcc	r2, {}	; <UNPREDICTABLE>
 1d0:	0000004c 	andeq	r0, r0, ip, asr #32
 1d4:	04070202 	streq	r0, [r7], #-514	; 0xfffffdfe
 1d8:	02000001 	andeq	r0, r0, #1
 1dc:	00050504 	andeq	r0, r5, r4, lsl #10
 1e0:	33030000 	movwcc	r0, #12288	; 0x3000
 1e4:	02000001 	andeq	r0, r0, #1
 1e8:	0000654f 	andeq	r6, r0, pc, asr #10
 1ec:	07040200 	streq	r0, [r4, -r0, lsl #4]
 1f0:	0000014e 	andeq	r0, r0, lr, asr #2
 1f4:	00050802 	andeq	r0, r5, r2, lsl #16
 1f8:	02000000 	andeq	r0, r0, #0
 1fc:	01490708 	cmpeq	r9, r8, lsl #14
 200:	04040000 	streq	r0, [r4], #-0
 204:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
 208:	07040200 	streq	r0, [r4, -r0, lsl #4]
 20c:	00000153 	andeq	r0, r0, r3, asr r1
 210:	00001003 	andeq	r1, r0, r3
 214:	28180300 	ldmdacs	r8, {r8, r9}
 218:	03000000 	movweq	r0, #0
 21c:	0000012a 	andeq	r0, r0, sl, lsr #2
 220:	00412403 	subeq	r2, r1, r3, lsl #8
 224:	35030000 	strcc	r0, [r3, #-0]
 228:	03000001 	movweq	r0, #1
 22c:	00005a30 	andeq	r5, r0, r0, lsr sl
 230:	04180500 	ldreq	r0, [r8], #-1280	; 0xfffffb00
 234:	00013609 	andeq	r3, r1, r9, lsl #12
 238:	01c20600 	biceq	r0, r2, r0, lsl #12
 23c:	0a040000 	beq	100244 <startup-0x1feffdbc>
 240:	0000009e 	muleq	r0, lr, r0
 244:	002f0600 	eoreq	r0, pc, r0, lsl #12
 248:	0b040000 	bleq	100250 <startup-0x1feffdb0>
 24c:	00000093 	muleq	r0, r3, r0
 250:	003e0604 	eorseq	r0, lr, r4, lsl #12
 254:	0c040000 	stceq	0, cr0, [r4], {-0}
 258:	00000093 	muleq	r0, r3, r0
 25c:	00270606 	eoreq	r0, r7, r6, lsl #12
 260:	0d040000 	stceq	0, cr0, [r4, #-0]
 264:	0000009e 	muleq	r0, lr, r0
 268:	013e0608 	teqeq	lr, r8, lsl #12
 26c:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
 270:	0000009e 	muleq	r0, lr, r0
 274:	01b1060c 			; <UNDEFINED> instruction: 0x01b1060c
 278:	0f040000 	svceq	0x00040000
 27c:	00000088 	andeq	r0, r0, r8, lsl #1
 280:	01670610 	cmneq	r7, r0, lsl r6
 284:	10040000 	andne	r0, r4, r0
 288:	00000088 	andeq	r0, r0, r8, lsl #1
 28c:	011c0611 	tsteq	ip, r1, lsl r6
 290:	11040000 	mrsne	r0, (UNDEF: 4)
 294:	00000093 	muleq	r0, r3, r0
 298:	01600612 	cmneq	r0, r2, lsl r6
 29c:	12040000 	andne	r0, r4, #0
 2a0:	00000088 	andeq	r0, r0, r8, lsl #1
 2a4:	00360614 	eorseq	r0, r6, r4, lsl r6
 2a8:	13040000 	movwne	r0, #16384	; 0x4000
 2ac:	00000088 	andeq	r0, r0, r8, lsl #1
 2b0:	00ef0615 	rsceq	r0, pc, r5, lsl r6	; <UNPREDICTABLE>
 2b4:	14040000 	strne	r0, [r4], #-0
 2b8:	00000093 	muleq	r0, r3, r0
 2bc:	17030016 	smladne	r3, r6, r0, r0
 2c0:	04000001 	streq	r0, [r0], #-1
 2c4:	0000a915 	andeq	sl, r0, r5, lsl r9
 2c8:	02480700 	subeq	r0, r8, #0, 14
 2cc:	63010000 	movwvs	r0, #4096	; 0x1000
 2d0:	00000033 	andeq	r0, r0, r3, lsr r0
 2d4:	20000266 	andcs	r0, r0, r6, ror #4
 2d8:	00000052 	andeq	r0, r0, r2, asr r0
 2dc:	01699c01 	cmneq	r9, r1, lsl #24
 2e0:	c8080000 	stmdagt	r8, {}	; <UNPREDICTABLE>
 2e4:	01000001 	tsteq	r0, r1
 2e8:	00016963 	andeq	r6, r1, r3, ror #18
 2ec:	74910200 	ldrvc	r0, [r1], #512	; 0x200
 2f0:	36040900 	strcc	r0, [r4], -r0, lsl #18
 2f4:	0a000001 	beq	300 <startup-0x1ffffd00>
 2f8:	000001d3 	ldrdeq	r0, [r0], -r3
 2fc:	02505e01 	subseq	r5, r0, #1, 28
 300:	00162000 	andseq	r2, r6, r0
 304:	9c010000 	stcls	0, cr0, [r1], {-0}
 308:	00000193 	muleq	r0, r3, r1
 30c:	0001c808 	andeq	ip, r1, r8, lsl #16
 310:	695e0100 	ldmdbvs	lr, {r8}^
 314:	02000001 	andeq	r0, r0, #1
 318:	0a007491 	beq	1d564 <startup-0x1ffe2a9c>
 31c:	00000251 	andeq	r0, r0, r1, asr r2
 320:	02005401 	andeq	r5, r0, #16777216	; 0x1000000
 324:	00502000 	subseq	r2, r0, r0
 328:	9c010000 	stcls	0, cr0, [r1], {-0}
 32c:	000001c5 	andeq	r0, r0, r5, asr #3
 330:	0001c808 	andeq	ip, r1, r8, lsl #16
 334:	69540100 	ldmdbvs	r4, {r8}^
 338:	02000001 	andeq	r0, r0, #1
 33c:	720b7491 	andvc	r7, fp, #-1862270976	; 0x91000000
 340:	0100776f 	tsteq	r0, pc, ror #14
 344:	00003354 	andeq	r3, r0, r4, asr r3
 348:	73910200 	orrsvc	r0, r1, #0, 4
 34c:	02400a00 	subeq	r0, r0, #0, 20
 350:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
 354:	200001b0 			; <UNDEFINED> instruction: 0x200001b0
 358:	00000050 	andeq	r0, r0, r0, asr r0
 35c:	02039c01 	andeq	r9, r3, #256	; 0x100
 360:	c8080000 	stmdagt	r8, {}	; <UNPREDICTABLE>
 364:	01000001 	tsteq	r0, r1
 368:	00016938 	andeq	r6, r1, r8, lsr r9
 36c:	4c910200 	lfmmi	f0, 4, [r1], {0}
 370:	0100630b 	tsteq	r0, fp, lsl #6
 374:	00003338 	andeq	r3, r0, r8, lsr r3
 378:	4b910200 	blmi	fe440b80 <delay_milli+0xde44085a>
 37c:	00022b0c 	andeq	r2, r2, ip, lsl #22
 380:	033a0100 	teqeq	sl, #0, 2
 384:	02000002 	andeq	r0, r0, #2
 388:	0d005091 	stceq	0, cr5, [r0, #-580]	; 0xfffffdbc
 38c:	0000004c 	andeq	r0, r0, ip, asr #32
 390:	00000213 	andeq	r0, r0, r3, lsl r2
 394:	0002130e 	andeq	r1, r2, lr, lsl #6
 398:	02000f00 	andeq	r0, r0, #0, 30
 39c:	02370704 	eorseq	r0, r7, #4, 14	; 0x100000
 3a0:	320f0000 	andcc	r0, pc, #0
 3a4:	01000002 	tsteq	r0, r2
 3a8:	00003324 	andeq	r3, r0, r4, lsr #6
 3ac:	00012000 	andeq	r2, r1, r0
 3b0:	00009020 	andeq	r9, r0, r0, lsr #32
 3b4:	5e9c0100 	fmlple	f0, f4, f0
 3b8:	0c000002 	stceq	0, cr0, [r0], {2}
 3bc:	000001ce 	andeq	r0, r0, lr, asr #3
 3c0:	025e2601 	subseq	r2, lr, #1048576	; 0x100000
 3c4:	91020000 	mrsls	r0, (UNDEF: 2)
 3c8:	6f72105c 	svcvs	0x0072105c
 3cc:	2c010077 	stccs	0, cr0, [r1], {119}	; 0x77
 3d0:	00000033 	andeq	r0, r0, r3, lsr r0
 3d4:	106f9102 	rsbne	r9, pc, r2, lsl #2
 3d8:	006c6f63 	rsbeq	r6, ip, r3, ror #30
 3dc:	00332c01 	eorseq	r2, r3, r1, lsl #24
 3e0:	91020000 	mrsls	r0, (UNDEF: 2)
 3e4:	330d006e 	movwcc	r0, #53358	; 0xd06e
 3e8:	6e000000 	cdpvs	0, 0, cr0, cr0, cr0, {0}
 3ec:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
 3f0:	00000213 	andeq	r0, r0, r3, lsl r2
 3f4:	5e0a000f 	cdppl	0, 0, cr0, cr10, cr15, {0}
 3f8:	01000002 	tsteq	r0, r2
 3fc:	0000bc15 	andeq	fp, r0, r5, lsl ip
 400:	00006420 	andeq	r6, r0, r0, lsr #8
 404:	929c0100 	addsls	r0, ip, #0, 2
 408:	08000002 	stmdaeq	r0, {r1}
 40c:	000001c8 	andeq	r0, r0, r8, asr #3
 410:	01691501 	cmneq	r9, r1, lsl #10
 414:	91020000 	mrsls	r0, (UNDEF: 2)
 418:	e3110074 	tst	r1, #116	; 0x74
 41c:	01000001 	tsteq	r0, r1
 420:	00005803 	andeq	r5, r0, r3, lsl #16
 424:	00006420 	andeq	r6, r0, r0, lsr #8
 428:	089c0100 	ldmeq	ip, {r8}
 42c:	000001c8 	andeq	r0, r0, r8, asr #3
 430:	01690301 	cmneq	r9, r1, lsl #6
 434:	91020000 	mrsls	r0, (UNDEF: 2)
 438:	49000074 	stmdbmi	r0, {r2, r4, r5, r6}
 43c:	04000001 	streq	r0, [r0], #-1
 440:	0001bc00 	andeq	fp, r1, r0, lsl #24
 444:	49010400 	stmdbmi	r1, {sl}
 448:	0c000000 	stceq	0, cr0, [r0], {-0}
 44c:	00000279 	andeq	r0, r0, r9, ror r2
 450:	200002b8 			; <UNDEFINED> instruction: 0x200002b8
 454:	000000a0 	andeq	r0, r0, r0, lsr #1
 458:	000002a0 	andeq	r0, r0, r0, lsr #5
 45c:	e3060102 	movw	r0, #24834	; 0x6102
 460:	02000000 	andeq	r0, r0, #0
 464:	00e10801 	rsceq	r0, r1, r1, lsl #16
 468:	02020000 	andeq	r0, r2, #0
 46c:	0001b805 	andeq	fp, r1, r5, lsl #16
 470:	07020200 	streq	r0, [r2, -r0, lsl #4]
 474:	00000104 	andeq	r0, r0, r4, lsl #2
 478:	05050402 	streq	r0, [r5, #-1026]	; 0xfffffbfe
 47c:	03000000 	movweq	r0, #0
 480:	00000133 	andeq	r0, r0, r3, lsr r1
 484:	004f4f02 	subeq	r4, pc, r2, lsl #30
 488:	04020000 	streq	r0, [r2], #-0
 48c:	00014e07 	andeq	r4, r1, r7, lsl #28
 490:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
 494:	00000000 	andeq	r0, r0, r0
 498:	49070802 	stmdbmi	r7, {r1, fp}
 49c:	04000001 	streq	r0, [r0], #-1
 4a0:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
 4a4:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
 4a8:	00015307 	andeq	r5, r1, r7, lsl #6
 4ac:	01350300 	teqeq	r5, r0, lsl #6
 4b0:	30030000 	andcc	r0, r3, r0
 4b4:	00000044 	andeq	r0, r0, r4, asr #32
 4b8:	05041005 	streq	r1, [r4, #-5]
 4bc:	000000b6 	strheq	r0, [r0], -r6
 4c0:	0002c706 	andeq	ip, r2, r6, lsl #14
 4c4:	72060400 	andvc	r0, r6, #0, 8
 4c8:	00000000 	andeq	r0, r0, r0
 4cc:	0002d006 	andeq	sp, r2, r6
 4d0:	72070400 	andvc	r0, r7, #0, 8
 4d4:	04000000 	streq	r0, [r0], #-0
 4d8:	0002bf06 	andeq	fp, r2, r6, lsl #30
 4dc:	72080400 	andvc	r0, r8, #0, 8
 4e0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
 4e4:	0002b506 	andeq	fp, r2, r6, lsl #10
 4e8:	72090400 	andvc	r0, r9, #0, 8
 4ec:	0c000000 	stceq	0, cr0, [r0], {-0}
 4f0:	02710300 	rsbseq	r0, r1, #0, 6
 4f4:	0a040000 	beq	1004fc <startup-0x1feffb04>
 4f8:	0000007d 	andeq	r0, r0, sp, ror r0
 4fc:	0002f807 	andeq	pc, r2, r7, lsl #16
 500:	26500100 	ldrbcs	r0, [r0], -r0, lsl #2
 504:	32200003 	eorcc	r0, r0, #3
 508:	01000000 	mrseq	r0, (UNDEF: 0)
 50c:	0000fe9c 	muleq	r0, ip, lr
 510:	736d0800 	cmnvc	sp, #0, 16
 514:	6b500100 	blvs	140091c <startup-0x1ebff6e4>
 518:	02000000 	andeq	r0, r0, #0
 51c:	f1096c91 			; <UNDEFINED> instruction: 0xf1096c91
 520:	01000002 	tsteq	r0, r2
 524:	00006b53 	andeq	r6, r0, r3, asr fp
 528:	70910200 	addsvc	r0, r1, r0, lsl #4
 52c:	0100690a 	tsteq	r0, sl, lsl #18
 530:	00006b54 	andeq	r6, r0, r4, asr fp
 534:	74910200 	ldrvc	r0, [r1], #512	; 0x200
 538:	02d90700 	sbcseq	r0, r9, #0, 14
 53c:	3b010000 	blcc	40544 <startup-0x1ffbfabc>
 540:	200002f8 	strdcs	r0, [r0], -r8
 544:	0000002e 	andeq	r0, r0, lr, lsr #32
 548:	013b9c01 	teqeq	fp, r1, lsl #24
 54c:	75080000 	strvc	r0, [r8, #-0]
 550:	3b010073 	blcc	40724 <startup-0x1ffbf8dc>
 554:	0000006b 	andeq	r0, r0, fp, rrx
 558:	096c9102 	stmdbeq	ip!, {r1, r8, ip, pc}^
 55c:	000002f1 	strdeq	r0, [r0], -r1
 560:	006b3e01 	rsbeq	r3, fp, r1, lsl #28
 564:	91020000 	mrsls	r0, (UNDEF: 2)
 568:	00690a70 	rsbeq	r0, r9, r0, ror sl
 56c:	006b3f01 	rsbeq	r3, fp, r1, lsl #30
 570:	91020000 	mrsls	r0, (UNDEF: 2)
 574:	e50b0074 	str	r0, [fp, #-116]	; 0xffffff8c
 578:	01000002 	tsteq	r0, r2
 57c:	0002b807 	andeq	fp, r2, r7, lsl #16
 580:	00004020 	andeq	r4, r0, r0, lsr #32
 584:	009c0100 	addseq	r0, ip, r0, lsl #2

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	1117550e 	tstne	r7, lr, lsl #10
   c:	00171001 	andseq	r1, r7, r1
  10:	00240200 	eoreq	r0, r4, r0, lsl #4
  14:	0b3e0b0b 	bleq	f82c48 <startup-0x1f07d3b8>
  18:	00000e03 	andeq	r0, r0, r3, lsl #28
  1c:	03001603 	movweq	r1, #1539	; 0x603
  20:	3b0b3a0e 	blcc	2ce860 <startup-0x1fd317a0>
  24:	0013490b 	andseq	r4, r3, fp, lsl #18
  28:	00240400 	eoreq	r0, r4, r0, lsl #8
  2c:	0b3e0b0b 	bleq	f82c60 <startup-0x1f07d3a0>
  30:	00000803 	andeq	r0, r0, r3, lsl #16
  34:	0b011305 	bleq	44c50 <startup-0x1ffbb3b0>
  38:	3b0b3a0b 	blcc	2ce86c <startup-0x1fd31794>
  3c:	0013010b 	andseq	r0, r3, fp, lsl #2
  40:	000d0600 	andeq	r0, sp, r0, lsl #12
  44:	0b3a0e03 	bleq	e83858 <startup-0x1f17c7a8>
  48:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  4c:	00000b38 	andeq	r0, r0, r8, lsr fp
  50:	3f012e07 	svccc	0x00012e07
  54:	3a0e0319 	bcc	380cc0 <startup-0x1fc7f340>
  58:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
  5c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
  60:	96184006 	ldrls	r4, [r8], -r6
  64:	13011942 	movwne	r1, #6466	; 0x1942
  68:	34080000 	strcc	r0, [r8], #-0
  6c:	3a0e0300 	bcc	380c74 <startup-0x1fc7f38c>
  70:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  74:	00180213 	andseq	r0, r8, r3, lsl r2
  78:	002e0900 	eoreq	r0, lr, r0, lsl #18
  7c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  80:	0b3b0b3a 	bleq	ec2d70 <startup-0x1f13d290>
  84:	01111927 	tsteq	r1, r7, lsr #18
  88:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  8c:	00194296 	mulseq	r9, r6, r2
  90:	002e0a00 	eoreq	r0, lr, r0, lsl #20
  94:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  98:	0b3b0b3a 	bleq	ec2d88 <startup-0x1f13d278>
  9c:	01111927 	tsteq	r1, r7, lsr #18
  a0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  a4:	00194297 	mulseq	r9, r7, r2
  a8:	11010000 	mrsne	r0, (UNDEF: 1)
  ac:	130e2501 	movwne	r2, #58625	; 0xe501
  b0:	110e030b 	tstne	lr, fp, lsl #6
  b4:	10061201 	andne	r1, r6, r1, lsl #4
  b8:	02000017 	andeq	r0, r0, #23
  bc:	0b0b0024 	bleq	2c0154 <startup-0x1fd3feac>
  c0:	0e030b3e 	vmoveq.16	d3[0], r0
  c4:	16030000 	strne	r0, [r3], -r0
  c8:	3a0e0300 	bcc	380cd0 <startup-0x1fc7f330>
  cc:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  d0:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
  d4:	0b0b0024 	bleq	2c016c <startup-0x1fd3fe94>
  d8:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
  dc:	13050000 	movwne	r0, #20480	; 0x5000
  e0:	3a0b0b01 	bcc	2c2cec <startup-0x1fd3d314>
  e4:	010b3b0b 	tsteq	fp, fp, lsl #22
  e8:	06000013 			; <UNDEFINED> instruction: 0x06000013
  ec:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
  f0:	0b3b0b3a 	bleq	ec2de0 <startup-0x1f13d220>
  f4:	0b381349 	bleq	e04e20 <startup-0x1f1fb1e0>
  f8:	2e070000 	cdpcs	0, 0, cr0, cr7, cr0, {0}
  fc:	03193f01 	tsteq	r9, #1, 30
 100:	3b0b3a0e 	blcc	2ce940 <startup-0x1fd316c0>
 104:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
 108:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 10c:	97184006 	ldrls	r4, [r8, -r6]
 110:	13011942 	movwne	r1, #6466	; 0x1942
 114:	05080000 	streq	r0, [r8, #-0]
 118:	3a0e0300 	bcc	380d20 <startup-0x1fc7f2e0>
 11c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 120:	00180213 	andseq	r0, r8, r3, lsl r2
 124:	000f0900 	andeq	r0, pc, r0, lsl #18
 128:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 12c:	2e0a0000 	cdpcs	0, 0, cr0, cr10, cr0, {0}
 130:	03193f01 	tsteq	r9, #1, 30
 134:	3b0b3a0e 	blcc	2ce974 <startup-0x1fd3168c>
 138:	1119270b 	tstne	r9, fp, lsl #14
 13c:	40061201 	andmi	r1, r6, r1, lsl #4
 140:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 144:	00001301 	andeq	r1, r0, r1, lsl #6
 148:	0300050b 	movweq	r0, #1291	; 0x50b
 14c:	3b0b3a08 	blcc	2ce974 <startup-0x1fd3168c>
 150:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 154:	0c000018 	stceq	0, cr0, [r0], {24}
 158:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 15c:	0b3b0b3a 	bleq	ec2e4c <startup-0x1f13d1b4>
 160:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 164:	010d0000 	mrseq	r0, (UNDEF: 13)
 168:	01134901 	tsteq	r3, r1, lsl #18
 16c:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
 170:	13490021 	movtne	r0, #36897	; 0x9021
 174:	00000b2f 	andeq	r0, r0, pc, lsr #22
 178:	3f012e0f 	svccc	0x00012e0f
 17c:	3a0e0319 	bcc	380de8 <startup-0x1fc7f218>
 180:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 184:	11134919 	tstne	r3, r9, lsl r9
 188:	40061201 	andmi	r1, r6, r1, lsl #4
 18c:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 190:	00001301 	andeq	r1, r0, r1, lsl #6
 194:	03003410 	movweq	r3, #1040	; 0x410
 198:	3b0b3a08 	blcc	2ce9c0 <startup-0x1fd31640>
 19c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 1a0:	11000018 	tstne	r0, r8, lsl r0
 1a4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 1a8:	0b3a0e03 	bleq	e839bc <startup-0x1f17c644>
 1ac:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 1b0:	06120111 			; <UNDEFINED> instruction: 0x06120111
 1b4:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 1b8:	00000019 	andeq	r0, r0, r9, lsl r0
 1bc:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 1c0:	030b130e 	movweq	r1, #45838	; 0xb30e
 1c4:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
 1c8:	00171006 	andseq	r1, r7, r6
 1cc:	00240200 	eoreq	r0, r4, r0, lsl #4
 1d0:	0b3e0b0b 	bleq	f82e04 <startup-0x1f07d1fc>
 1d4:	00000e03 	andeq	r0, r0, r3, lsl #28
 1d8:	03001603 	movweq	r1, #1539	; 0x603
 1dc:	3b0b3a0e 	blcc	2cea1c <startup-0x1fd315e4>
 1e0:	0013490b 	andseq	r4, r3, fp, lsl #18
 1e4:	00240400 	eoreq	r0, r4, r0, lsl #8
 1e8:	0b3e0b0b 	bleq	f82e1c <startup-0x1f07d1e4>
 1ec:	00000803 	andeq	r0, r0, r3, lsl #16
 1f0:	0b011305 	bleq	44e0c <startup-0x1ffbb1f4>
 1f4:	3b0b3a0b 	blcc	2cea28 <startup-0x1fd315d8>
 1f8:	0013010b 	andseq	r0, r3, fp, lsl #2
 1fc:	000d0600 	andeq	r0, sp, r0, lsl #12
 200:	0b3a0e03 	bleq	e83a14 <startup-0x1f17c5ec>
 204:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 208:	00000b38 	andeq	r0, r0, r8, lsr fp
 20c:	3f012e07 	svccc	0x00012e07
 210:	3a0e0319 	bcc	380e7c <startup-0x1fc7f184>
 214:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 218:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 21c:	96184006 	ldrls	r4, [r8], -r6
 220:	13011942 	movwne	r1, #6466	; 0x1942
 224:	05080000 	streq	r0, [r8, #-0]
 228:	3a080300 	bcc	200e30 <startup-0x1fdff1d0>
 22c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 230:	00180213 	andseq	r0, r8, r3, lsl r2
 234:	00340900 	eorseq	r0, r4, r0, lsl #18
 238:	0b3a0e03 	bleq	e83a4c <startup-0x1f17c5b4>
 23c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 240:	00001802 	andeq	r1, r0, r2, lsl #16
 244:	0300340a 	movweq	r3, #1034	; 0x40a
 248:	3b0b3a08 	blcc	2cea70 <startup-0x1fd31590>
 24c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 250:	0b000018 	bleq	2b8 <startup-0x1ffffd48>
 254:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 258:	0b3a0e03 	bleq	e83a6c <startup-0x1f17c594>
 25c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 260:	06120111 			; <UNDEFINED> instruction: 0x06120111
 264:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 268:	00000019 	andeq	r0, r0, r9, lsl r0

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000048 	andeq	r0, r0, r8, asr #32
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...
  28:	0000001c 	andeq	r0, r0, ip, lsl r0
  2c:	01880002 	orreq	r0, r8, r2
  30:	00040000 	andeq	r0, r4, r0
  34:	00000000 	andeq	r0, r0, r0
  38:	20000058 	andcs	r0, r0, r8, asr r0
  3c:	00000260 	andeq	r0, r0, r0, ror #4
	...
  48:	0000001c 	andeq	r0, r0, ip, lsl r0
  4c:	043b0002 	ldrteq	r0, [fp], #-2
  50:	00040000 	andeq	r0, r4, r0
  54:	00000000 	andeq	r0, r0, r0
  58:	200002b8 			; <UNDEFINED> instruction: 0x200002b8
  5c:	000000a0 	andeq	r0, r0, r0, lsr #1
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	20000058 	andcs	r0, r0, r8, asr r0
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	0000012f 	andeq	r0, r0, pc, lsr #2
   4:	00f50002 	rscseq	r0, r5, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	45010000 	strmi	r0, [r1, #-0]
  1c:	41442f3a 	cmpmi	r4, sl, lsr pc
  20:	37313054 			; <UNDEFINED> instruction: 0x37313054
  24:	646f432f 	strbtvs	r4, [pc], #-815	; 2c <startup-0x1fffffd4>
  28:	74694c65 	strbtvc	r4, [r9], #-3173	; 0xfffff39b
  2c:	69662065 	stmdbvs	r6!, {r0, r2, r5, r6, sp}^
  30:	2f73656c 	svccs	0x0073656c
  34:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
  38:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
  3c:	6f697461 	svcvs	0x00697461
  40:	2f72656e 	svccs	0x0072656e
  44:	67707075 			; <UNDEFINED> instruction: 0x67707075
  48:	63003134 	movwvs	r3, #308	; 0x134
  4c:	73635c3a 	cmnvc	r3, #14848	; 0x3a00
  50:	70706165 	rsbsvc	r6, r0, r5, ror #2
  54:	646f635c 	strbtvs	r6, [pc], #-860	; 5c <startup-0x1fffffa4>
  58:	74696c65 	strbtvc	r6, [r9], #-3173	; 0xfffff39b
  5c:	6f745c65 	svcvs	0x00745c65
  60:	5c736c6f 	ldclpl	12, cr6, [r3], #-444	; 0xfffffe44
  64:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
  68:	5c6d7261 	sfmpl	f7, 2, [sp], #-388	; 0xfffffe7c
  6c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
  70:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
  74:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
  78:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
  7c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
  80:	616d5c65 	cmnvs	sp, r5, ror #24
  84:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
  88:	3a630065 	bcc	18c0224 <startup-0x1e73fddc>
  8c:	6573635c 	ldrbvs	r6, [r3, #-860]!	; 0xfffffca4
  90:	5c707061 	ldclpl	0, cr7, [r0], #-388	; 0xfffffe7c
  94:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
  98:	6574696c 	ldrbvs	r6, [r4, #-2412]!	; 0xfffff694
  9c:	6f6f745c 	svcvs	0x006f745c
  a0:	675c736c 	ldrbvs	r7, [ip, -ip, ror #6]
  a4:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
  a8:	615c6d72 	cmpvs	ip, r2, ror sp
  ac:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
  b0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
  b4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
  b8:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
  bc:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
  c0:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
  c4:	74730000 	ldrbtvc	r0, [r3], #-0
  c8:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
  cc:	00632e70 	rsbeq	r2, r3, r0, ror lr
  d0:	5f000001 	svcpl	0x00000001
  d4:	61666564 	cmnvs	r6, r4, ror #10
  d8:	5f746c75 	svcpl	0x00746c75
  dc:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
  e0:	00682e73 	rsbeq	r2, r8, r3, ror lr
  e4:	5f000002 	svcpl	0x00000002
  e8:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
  ec:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
  f0:	00000300 	andeq	r0, r0, r0, lsl #6
  f4:	6f697067 	svcvs	0x00697067
  f8:	0100682e 	tsteq	r0, lr, lsr #16
  fc:	00000000 	andeq	r0, r0, r0
 100:	00000205 	andeq	r0, r0, r5, lsl #4
 104:	0b032000 	bleq	c810c <startup-0x1ff37ef4>
 108:	025e1301 	subseq	r1, lr, #67108864	; 0x4000000
 10c:	01010003 	tsteq	r1, r3
 110:	10020500 	andne	r0, r2, r0, lsl #10
 114:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
 118:	4b2f0114 	blmi	bc0570 <startup-0x1f43fa90>
 11c:	003d694b 	eorseq	r6, sp, fp, asr #18
 120:	31010402 	tstcc	r1, r2, lsl #8
 124:	01040200 	mrseq	r0, R12_usr
 128:	04020059 	streq	r0, [r2], #-89	; 0xffffffa7
 12c:	03027301 	movweq	r7, #8961	; 0x2301
 130:	69010100 	stmdbvs	r1, {r8}
 134:	02000001 	andeq	r0, r0, #1
 138:	0000f200 	andeq	pc, r0, r0, lsl #4
 13c:	fb010200 	blx	40946 <startup-0x1ffbf6ba>
 140:	01000d0e 	tsteq	r0, lr, lsl #26
 144:	00010101 	andeq	r0, r1, r1, lsl #2
 148:	00010000 	andeq	r0, r1, r0
 14c:	3a450100 	bcc	1140554 <startup-0x1eebfaac>
 150:	5441442f 	strbpl	r4, [r1], #-1071	; 0xfffffbd1
 154:	2f373130 	svccs	0x00373130
 158:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 15c:	6574694c 	ldrbvs	r6, [r4, #-2380]!	; 0xfffff6b4
 160:	6c696620 	stclvs	6, cr6, [r9], #-128	; 0xffffff80
 164:	4d2f7365 	stcmi	3, cr7, [pc, #-404]!	; ffffffd8 <delay_milli+0xdffffcb2>
 168:	616c706f 	cmnvs	ip, pc, rrx
 16c:	61726f62 	cmnvs	r2, r2, ror #30
 170:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 174:	752f7265 	strvc	r7, [pc, #-613]!	; ffffff17 <delay_milli+0xdffffbf1>
 178:	34677070 	strbtcc	r7, [r7], #-112	; 0xffffff90
 17c:	3a630031 	bcc	18c0248 <startup-0x1e73fdb8>
 180:	6573635c 	ldrbvs	r6, [r3, #-860]!	; 0xfffffca4
 184:	5c707061 	ldclpl	0, cr7, [r0], #-388	; 0xfffffe7c
 188:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
 18c:	6574696c 	ldrbvs	r6, [r4, #-2412]!	; 0xfffff694
 190:	6f6f745c 	svcvs	0x006f745c
 194:	675c736c 	ldrbvs	r7, [ip, -ip, ror #6]
 198:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
 19c:	615c6d72 	cmpvs	ip, r2, ror sp
 1a0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
 1a4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
 1a8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
 1ac:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
 1b0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
 1b4:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
 1b8:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
 1bc:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
 1c0:	61657363 	cmnvs	r5, r3, ror #6
 1c4:	635c7070 	cmpvs	ip, #112	; 0x70
 1c8:	6c65646f 	cfstrdvs	mvd6, [r5], #-444	; 0xfffffe44
 1cc:	5c657469 	cfstrdpl	mvd7, [r5], #-420	; 0xfffffe5c
 1d0:	6c6f6f74 	stclvs	15, cr6, [pc], #-464	; 8 <startup-0x1ffffff8>
 1d4:	63675c73 	cmnvs	r7, #29440	; 0x7300
 1d8:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
 1dc:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
 1e0:	6f6e2d6d 	svcvs	0x006e2d6d
 1e4:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
 1e8:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
 1ec:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
 1f0:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
 1f4:	00737973 	rsbseq	r7, r3, r3, ror r9
 1f8:	69706700 	ldmdbvs	r0!, {r8, r9, sl, sp, lr}^
 1fc:	00632e6f 	rsbeq	r2, r3, pc, ror #28
 200:	5f000001 	svcpl	0x00000001
 204:	61666564 	cmnvs	r6, r4, ror #10
 208:	5f746c75 	svcpl	0x00746c75
 20c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 210:	00682e73 	rsbeq	r2, r8, r3, ror lr
 214:	5f000002 	svcpl	0x00000002
 218:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
 21c:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
 220:	00000300 	andeq	r0, r0, r0, lsl #6
 224:	6f697067 	svcvs	0x00697067
 228:	0100682e 	tsteq	r0, lr, lsr #16
 22c:	00000000 	andeq	r0, r0, r0
 230:	00580205 	subseq	r0, r8, r5, lsl #4
 234:	4d152000 	ldcmi	0, cr2, [r5, #-0]
 238:	86756a67 	ldrbthi	r6, [r5], -r7, ror #20
 23c:	4c697567 	cfstr64mi	mvdx7, [r9], #-412	; 0xfffffe64
 240:	77756967 	ldrbvc	r6, [r5, -r7, ror #18]!
 244:	3d776775 	ldclcc	7, cr6, [r7, #-468]!	; 0xfffffe2c
 248:	834b596d 	movthi	r5, #47469	; 0xb96d
 24c:	02005983 	andeq	r5, r0, #2146304	; 0x20c000
 250:	00a70204 	adceq	r0, r7, r4, lsl #4
 254:	06010402 	streq	r0, [r1], -r2, lsl #8
 258:	00600674 	rsbeq	r0, r0, r4, ror r6
 25c:	21010402 	tstcs	r1, r2, lsl #8
 260:	13037593 	movwne	r7, #13715	; 0x3593
 264:	1e404b90 	vmovne.8	d16[0], r4
 268:	7a757792 	bvc	1d5e0b8 <startup-0x1e2a1f48>
 26c:	50207a03 	eorpl	r7, r0, r3, lsl #20
 270:	4b4b4b1b 	blmi	12d2ee4 <startup-0x1ed2d11c>
 274:	3d4b4d4c 	stclcc	13, cr4, [fp, #-304]	; 0xfffffed0
 278:	02004b4d 	andeq	r4, r0, #78848	; 0x13400
 27c:	66060104 	strvs	r0, [r6], -r4, lsl #2
 280:	02002f06 	andeq	r2, r0, #6, 30
 284:	66060104 	strvs	r0, [r6], -r4, lsl #2
 288:	02002f06 	andeq	r2, r0, #6, 30
 28c:	66060104 	strvs	r0, [r6], -r4, lsl #2
 290:	02002f06 	andeq	r2, r0, #6, 30
 294:	66060104 	strvs	r0, [r6], -r4, lsl #2
 298:	02212f06 	eoreq	r2, r1, #6, 30
 29c:	01010004 	tsteq	r1, r4
 2a0:	0000014b 	andeq	r0, r0, fp, asr #2
 2a4:	00fc0002 	rscseq	r0, ip, r2
 2a8:	01020000 	mrseq	r0, (UNDEF: 2)
 2ac:	000d0efb 	strdeq	r0, [sp], -fp
 2b0:	01010101 	tsteq	r1, r1, lsl #2
 2b4:	01000000 	mrseq	r0, (UNDEF: 0)
 2b8:	45010000 	strmi	r0, [r1, #-0]
 2bc:	41442f3a 	cmpmi	r4, sl, lsr pc
 2c0:	37313054 			; <UNDEFINED> instruction: 0x37313054
 2c4:	646f432f 	strbtvs	r4, [pc], #-815	; 2cc <startup-0x1ffffd34>
 2c8:	74694c65 	strbtvc	r4, [r9], #-3173	; 0xfffff39b
 2cc:	69662065 	stmdbvs	r6!, {r0, r2, r5, r6, sp}^
 2d0:	2f73656c 	svccs	0x0073656c
 2d4:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
 2d8:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
 2dc:	6f697461 	svcvs	0x00697461
 2e0:	2f72656e 	svccs	0x0072656e
 2e4:	67707075 			; <UNDEFINED> instruction: 0x67707075
 2e8:	63003134 	movwvs	r3, #308	; 0x134
 2ec:	73635c3a 	cmnvc	r3, #14848	; 0x3a00
 2f0:	70706165 	rsbsvc	r6, r0, r5, ror #2
 2f4:	646f635c 	strbtvs	r6, [pc], #-860	; 2fc <startup-0x1ffffd04>
 2f8:	74696c65 	strbtvc	r6, [r9], #-3173	; 0xfffff39b
 2fc:	6f745c65 	svcvs	0x00745c65
 300:	5c736c6f 	ldclpl	12, cr6, [r3], #-444	; 0xfffffe44
 304:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
 308:	5c6d7261 	sfmpl	f7, 2, [sp], #-388	; 0xfffffe7c
 30c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
 310:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
 314:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
 318:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
 31c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
 320:	616d5c65 	cmnvs	sp, r5, ror #24
 324:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
 328:	3a630065 	bcc	18c04c4 <startup-0x1e73fb3c>
 32c:	6573635c 	ldrbvs	r6, [r3, #-860]!	; 0xfffffca4
 330:	5c707061 	ldclpl	0, cr7, [r0], #-388	; 0xfffffe7c
 334:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
 338:	6574696c 	ldrbvs	r6, [r4, #-2412]!	; 0xfffff694
 33c:	6f6f745c 	svcvs	0x006f745c
 340:	675c736c 	ldrbvs	r7, [ip, -ip, ror #6]
 344:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
 348:	615c6d72 	cmpvs	ip, r2, ror sp
 34c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
 350:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
 354:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
 358:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
 35c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
 360:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
 364:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
 368:	65645f73 	strbvs	r5, [r4, #-3955]!	; 0xfffff08d
 36c:	2e79616c 	rpwcsez	f6, f1, #4.0
 370:	00010063 	andeq	r0, r1, r3, rrx
 374:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
 378:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
 37c:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 380:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
 384:	00020068 	andeq	r0, r2, r8, rrx
 388:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
 38c:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
 390:	0300682e 	movweq	r6, #2094	; 0x82e
 394:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
 398:	65645f73 	strbvs	r5, [r4, #-3955]!	; 0xfffff08d
 39c:	2e79616c 	rpwcsez	f6, f1, #4.0
 3a0:	00010068 	andeq	r0, r1, r8, rrx
 3a4:	05000000 	streq	r0, [r0, #-0]
 3a8:	0002b802 	andeq	fp, r2, r2, lsl #16
 3ac:	44331920 	ldrtmi	r1, [r3], #-2336	; 0xfffff6e0
 3b0:	00424342 	subeq	r4, r2, r2, asr #6
 3b4:	06010402 	streq	r0, [r1], -r2, lsl #8
 3b8:	3d6c0620 	stclcc	6, cr0, [ip, #-128]!	; 0xffffff80
 3bc:	4c820d03 	stcmi	13, cr0, [r2], {3}
 3c0:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
 3c4:	02003e03 	andeq	r3, r0, #3, 28	; 0x30
 3c8:	002c0304 	eoreq	r0, ip, r4, lsl #6
 3cc:	06010402 	streq	r0, [r1], -r2, lsl #8
 3d0:	034e063c 	movteq	r0, #58940	; 0xe63c
 3d4:	5a4c4a0d 	bpl	1312c10 <startup-0x1eced3f0>
 3d8:	03040200 	movweq	r0, #16896	; 0x4200
 3dc:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
 3e0:	02002c03 	andeq	r2, r0, #768	; 0x300
 3e4:	3c060104 	stfccs	f0, [r6], {4}
 3e8:	04024e06 	streq	r4, [r2], #-3590	; 0xfffff1fa
 3ec:	Address 0x000003ec is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
   4:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
   8:	6e692067 	cdpvs	0, 6, cr2, cr9, cr7, {3}
   c:	5f5f0074 	svcpl	0x005f0074
  10:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
  14:	00745f38 	rsbseq	r5, r4, r8, lsr pc
  18:	73657270 	cmnvc	r5, #112, 4
  1c:	5f646573 	svcpl	0x00646573
  20:	74747562 	ldrbtvc	r7, [r4], #-1378	; 0xfffffa9e
  24:	6f006e6f 	svcvs	0x00006e6f
  28:	65657073 	strbvs	r7, [r5, #-115]!	; 0xffffff8d
  2c:	6f007264 	svcvs	0x00007264
  30:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
  34:	646f0072 	strbtvs	r0, [pc], #-114	; 3c <startup-0x1fffffc4>
  38:	67694872 			; <UNDEFINED> instruction: 0x67694872
  3c:	746f0068 	strbtvc	r0, [pc], #-104	; 44 <startup-0x1fffffbc>
  40:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
  44:	64657672 	strbtvs	r7, [r5], #-1650	; 0xfffff98e
  48:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
  4c:	39394320 	ldmdbcc	r9!, {r5, r8, r9, lr}
  50:	332e3620 			; <UNDEFINED> instruction: 0x332e3620
  54:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  58:	30373130 	eorscc	r3, r7, r0, lsr r1
  5c:	20353132 	eorscs	r3, r5, r2, lsr r1
  60:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  64:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  68:	415b2029 	cmpmi	fp, r9, lsr #32
  6c:	652f4d52 	strvs	r4, [pc, #-3410]!	; fffff322 <delay_milli+0xdfffeffc>
  70:	6465626d 	strbtvs	r6, [r5], #-621	; 0xfffffd93
  74:	2d646564 	cfstr64cs	mvdx6, [r4, #-400]!	; 0xfffffe70
  78:	72622d36 	rsbvc	r2, r2, #3456	; 0xd80
  7c:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  80:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  84:	6f697369 	svcvs	0x00697369
  88:	3432206e 	ldrtcc	r2, [r2], #-110	; 0xffffff92
  8c:	32313535 	eorscc	r3, r1, #222298112	; 0xd400000
  90:	6d2d205d 	stcvs	0, cr2, [sp, #-372]!	; 0xfffffe8c
  94:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
  98:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
  9c:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
  a0:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
  a4:	6d2d3676 	stcvs	6, cr3, [sp, #-472]!	; 0xfffffe28
  a8:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
  ac:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
  b0:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
  b4:	666f733d 			; <UNDEFINED> instruction: 0x666f733d
  b8:	6d2d2074 	stcvs	0, cr2, [sp, #-464]!	; 0xfffffe30
  bc:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
  c0:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
  c4:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
  c8:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
  cc:	6d2d3676 	stcvs	6, cr3, [sp, #-472]!	; 0xfffffe28
  d0:	20672d20 	rsbcs	r2, r7, r0, lsr #26
  d4:	20304f2d 	eorscs	r4, r0, sp, lsr #30
  d8:	6474732d 	ldrbtvs	r7, [r4], #-813	; 0xfffffcd3
  dc:	3939633d 	ldmdbcc	r9!, {r0, r2, r3, r4, r5, r8, r9, sp, lr}
  e0:	736e7500 	cmnvc	lr, #0, 10
  e4:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
  e8:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
  ec:	6f007261 	svcvs	0x00007261
  f0:	65527264 	ldrbvs	r7, [r2, #-612]	; 0xfffffd9c
  f4:	76726573 			; <UNDEFINED> instruction: 0x76726573
  f8:	61006465 	tstvs	r0, r5, ror #8
  fc:	695f7070 	ldmdbvs	pc, {r4, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
 100:	0074696e 	rsbseq	r6, r4, lr, ror #18
 104:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
 108:	6e752074 	mrcvs	0, 3, r2, cr5, cr4, {3}
 10c:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 110:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
 114:	4700746e 	strmi	r7, [r0, -lr, ror #8]
 118:	004f4950 	subeq	r4, pc, r0, asr r9	; <UNPREDICTABLE>
 11c:	52726469 	rsbspl	r6, r2, #1761607680	; 0x69000000
 120:	72657365 	rsbvc	r7, r5, #-1811939327	; 0x94000001
 124:	00646576 	rsbeq	r6, r4, r6, ror r5
 128:	69755f5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
 12c:	3631746e 	ldrtcc	r7, [r1], -lr, ror #8
 130:	5f00745f 	svcpl	0x0000745f
 134:	6e69755f 	mcrvs	5, 3, r7, cr9, cr15, {2}
 138:	5f323374 	svcpl	0x00323374
 13c:	75700074 	ldrbvc	r0, [r0, #-116]!	; 0xffffff8c
 140:	00726470 	rsbseq	r6, r2, r0, ror r4
 144:	6e69616d 	powvsez	f6, f1, #5.0
 148:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
 14c:	6f6c2067 	svcvs	0x006c2067
 150:	7520676e 	strvc	r6, [r0, #-1902]!	; 0xfffff892
 154:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
 158:	2064656e 	rsbcs	r6, r4, lr, ror #10
 15c:	00746e69 	rsbseq	r6, r4, r9, ror #28
 160:	4c72646f 	cfldrdmi	mvd6, [r2], #-444	; 0xfffffe44
 164:	6900776f 	stmdbvs	r0, {r0, r1, r2, r3, r5, r6, r8, r9, sl, ip, sp, lr}
 168:	69487264 	stmdbvs	r8, {r2, r5, r6, r9, ip, sp, lr}^
 16c:	73006867 	movwvc	r6, #2151	; 0x867
 170:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 174:	45007075 	strmi	r7, [r0, #-117]	; 0xffffff8b
 178:	41442f3a 	cmpmi	r4, sl, lsr pc
 17c:	37313054 			; <UNDEFINED> instruction: 0x37313054
 180:	646f432f 	strbtvs	r4, [pc], #-815	; 188 <startup-0x1ffffe78>
 184:	74694c65 	strbtvc	r4, [r9], #-3173	; 0xfffff39b
 188:	69662065 	stmdbvs	r6!, {r0, r2, r5, r6, sp}^
 18c:	2f73656c 	svccs	0x0073656c
 190:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
 194:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
 198:	6f697461 	svcvs	0x00697461
 19c:	2f72656e 	svccs	0x0072656e
 1a0:	67707075 			; <UNDEFINED> instruction: 0x67707075
 1a4:	732f3134 			; <UNDEFINED> instruction: 0x732f3134
 1a8:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 1ac:	632e7075 			; <UNDEFINED> instruction: 0x632e7075
 1b0:	72646900 	rsbvc	r6, r4, #0, 18
 1b4:	00776f4c 	rsbseq	r6, r7, ip, asr #30
 1b8:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
 1bc:	6e692074 	mcrvs	0, 3, r2, cr9, cr4, {3}
 1c0:	6f6d0074 	svcvs	0x006d0074
 1c4:	00726564 	rsbseq	r6, r2, r4, ror #10
 1c8:	6970675f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, sp, lr}^
 1cc:	656b006f 	strbvs	r0, [fp, #-111]!	; 0xffffff91
 1d0:	64007379 	strvs	r7, [r0], #-889	; 0xfffffc87
 1d4:	74636165 	strbtvc	r6, [r3], #-357	; 0xfffffe9b
 1d8:	74617669 	strbtvc	r7, [r1], #-1641	; 0xfffff997
 1dc:	6f725f65 	svcvs	0x00725f65
 1e0:	73007377 	movwvc	r7, #887	; 0x377
 1e4:	70757465 	rsbsvc	r7, r5, r5, ror #8
 1e8:	726f665f 	rsbvc	r6, pc, #99614720	; 0x5f00000
 1ec:	79656b5f 	stmdbvc	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, fp, sp, lr}^
 1f0:	00646170 	rsbeq	r6, r4, r0, ror r1
 1f4:	442f3a45 	strtmi	r3, [pc], #-2629	; 1fc <startup-0x1ffffe04>
 1f8:	31305441 	teqcc	r0, r1, asr #8
 1fc:	6f432f37 	svcvs	0x00432f37
 200:	694c6564 	stmdbvs	ip, {r2, r5, r6, r8, sl, sp, lr}^
 204:	66206574 			; <UNDEFINED> instruction: 0x66206574
 208:	73656c69 	cmnvc	r5, #26880	; 0x6900
 20c:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
 210:	6f62616c 	svcvs	0x0062616c
 214:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 218:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
 21c:	7070752f 	rsbsvc	r7, r0, pc, lsr #10
 220:	2f313467 	svccs	0x00313467
 224:	6f697067 	svcvs	0x00697067
 228:	7200632e 	andvc	r6, r0, #-1207959552	; 0xb8000000
 22c:	6c757365 	ldclvs	3, cr7, [r5], #-404	; 0xfffffe6c
 230:	656b0074 	strbvs	r0, [fp, #-116]!	; 0xffffff8c
 234:	73006279 	movwvc	r6, #633	; 0x279
 238:	74657a69 	strbtvc	r7, [r5], #-2665	; 0xfffff597
 23c:	00657079 	rsbeq	r7, r5, r9, ror r0
 240:	3774756f 	ldrbcc	r7, [r4, -pc, ror #10]!
 244:	00676573 	rsbeq	r6, r7, r3, ror r5
 248:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
 24c:	6c6f635f 	stclvs	3, cr6, [pc], #-380	; d8 <startup-0x1fffff28>
 250:	74636100 	strbtvc	r6, [r3], #-256	; 0xffffff00
 254:	74617669 	strbtvc	r7, [r1], #-1641	; 0xfffff997
 258:	6f725f65 	svcvs	0x00725f65
 25c:	65730077 	ldrbvs	r0, [r3, #-119]!	; 0xffffff89
 260:	5f707574 	svcpl	0x00707574
 264:	5f726f66 	svcpl	0x00726f66
 268:	5f676573 	svcpl	0x00676573
 26c:	70736964 	rsbsvc	r6, r3, r4, ror #18
 270:	73795300 	cmnvc	r9, #0, 6
 274:	6b636954 	blvs	18da7cc <startup-0x1e725834>
 278:	2f3a4500 	svccs	0x003a4500
 27c:	30544144 	subscc	r4, r4, r4, asr #2
 280:	432f3731 			; <UNDEFINED> instruction: 0x432f3731
 284:	4c65646f 	cfstrdmi	mvd6, [r5], #-444	; 0xfffffe44
 288:	20657469 	rsbcs	r7, r5, r9, ror #8
 28c:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 290:	6f4d2f73 	svcvs	0x004d2f73
 294:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
 298:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
 29c:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
 2a0:	70752f72 	rsbsvc	r2, r5, r2, ror pc
 2a4:	31346770 	teqcc	r4, r0, ror r7
 2a8:	7379732f 	cmnvc	r9, #-1140850688	; 0xbc000000
 2ac:	6c65645f 	cfstrdvs	mvd6, [r5], #-380	; 0xfffffe84
 2b0:	632e7961 			; <UNDEFINED> instruction: 0x632e7961
 2b4:	4b545300 	blmi	1514ebc <startup-0x1eaeb144>
 2b8:	4c41435f 	mcrrmi	3, 5, r4, r1, cr15
 2bc:	53004249 	movwpl	r4, #585	; 0x249
 2c0:	565f4b54 			; <UNDEFINED> instruction: 0x565f4b54
 2c4:	53004c41 	movwpl	r4, #3137	; 0xc41
 2c8:	435f4b54 	cmpmi	pc, #84, 22	; 0x15000
 2cc:	004c5254 	subeq	r5, ip, r4, asr r2
 2d0:	5f4b5453 	svcpl	0x004b5453
 2d4:	44414f4c 	strbmi	r4, [r1], #-3916	; 0xfffff0b4
 2d8:	6c656400 	cfstrdvs	mvd6, [r5], #-0
 2dc:	6d5f7961 	vldrvs.16	s15, [pc, #-194]	; 222 <startup-0x1ffffdde>	; <UNPREDICTABLE>
 2e0:	6f726b69 	svcvs	0x00726b69
 2e4:	6c656400 	cfstrdvs	mvd6, [r5], #-0
 2e8:	325f7961 	subscc	r7, pc, #1589248	; 0x184000
 2ec:	736e3035 	cmnvc	lr, #53	; 0x35
 2f0:	6c656400 	cfstrdvs	mvd6, [r5], #-0
 2f4:	00737961 	rsbseq	r7, r3, r1, ror #18
 2f8:	616c6564 	cmnvs	ip, r4, ror #10
 2fc:	696d5f79 	stmdbvs	sp!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 300:	00696c6c 	rsbeq	r6, r9, ip, ror #24

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	204d5241 	subcs	r5, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d36 	eorscc	r2, r2, r6, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	70752d31 	rsbsvc	r2, r5, r1, lsr sp
  38:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
  3c:	2e362029 	cdpcs	0, 3, cr2, cr6, cr9, {1}
  40:	20312e33 	eorscs	r2, r1, r3, lsr lr
  44:	37313032 			; <UNDEFINED> instruction: 0x37313032
  48:	35313230 	ldrcc	r3, [r1, #-560]!	; 0xfffffdd0
  4c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  50:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  54:	5b202965 	blpl	80a5f0 <startup-0x1f7f5a10>
  58:	2f4d5241 	svccs	0x004d5241
  5c:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  60:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  64:	622d362d 	eorvs	r3, sp, #47185920	; 0x2d00000
  68:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  6c:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  70:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  74:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  78:	31353534 	teqcc	r5, r4, lsr r5
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000020 	andeq	r0, r0, r0, lsr #32
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  3c:	00000020 	andeq	r0, r0, r0, lsr #32
  40:	00000000 	andeq	r0, r0, r0
  44:	20000030 	andcs	r0, r0, r0, lsr r0
  48:	00000028 	andeq	r0, r0, r8, lsr #32
  4c:	400c0e41 	andmi	r0, ip, r1, asr #28
  50:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
  54:	018e4002 	orreq	r4, lr, r2
  58:	41180e41 	tstmi	r8, r1, asr #28
  5c:	0000070d 	andeq	r0, r0, sp, lsl #14
  60:	0000000c 	andeq	r0, r0, ip
  64:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  68:	7c020001 	stcvc	0, cr0, [r2], {1}
  6c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  70:	0000001c 	andeq	r0, r0, ip, lsl r0
  74:	00000060 	andeq	r0, r0, r0, rrx
  78:	20000058 	andcs	r0, r0, r8, asr r0
  7c:	00000064 	andeq	r0, r0, r4, rrx
  80:	40080e41 	andmi	r0, r8, r1, asr #28
  84:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  88:	100e4101 	andne	r4, lr, r1, lsl #2
  8c:	00070d41 	andeq	r0, r7, r1, asr #26
  90:	0000001c 	andeq	r0, r0, ip, lsl r0
  94:	00000060 	andeq	r0, r0, r0, rrx
  98:	200000bc 	strhcs	r0, [r0], -ip
  9c:	00000064 	andeq	r0, r0, r4, rrx
  a0:	40080e41 	andmi	r0, r8, r1, asr #28
  a4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  a8:	100e4101 	andne	r4, lr, r1, lsl #2
  ac:	00070d41 	andeq	r0, r7, r1, asr #26
  b0:	00000020 	andeq	r0, r0, r0, lsr #32
  b4:	00000060 	andeq	r0, r0, r0, rrx
  b8:	20000120 	andcs	r0, r0, r0, lsr #2
  bc:	00000090 	muleq	r0, r0, r0
  c0:	400c0e41 	andmi	r0, ip, r1, asr #28
  c4:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
  c8:	018e4002 	orreq	r4, lr, r2
  cc:	41280e41 			; <UNDEFINED> instruction: 0x41280e41
  d0:	0000070d 	andeq	r0, r0, sp, lsl #14
  d4:	00000020 	andeq	r0, r0, r0, lsr #32
  d8:	00000060 	andeq	r0, r0, r0, rrx
  dc:	200001b0 			; <UNDEFINED> instruction: 0x200001b0
  e0:	00000050 	andeq	r0, r0, r0, asr r0
  e4:	400c0e41 	andmi	r0, ip, r1, asr #28
  e8:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
  ec:	018e4002 	orreq	r4, lr, r2
  f0:	41380e41 	teqmi	r8, r1, asr #28
  f4:	0000070d 	andeq	r0, r0, sp, lsl #14
  f8:	0000001c 	andeq	r0, r0, ip, lsl r0
  fc:	00000060 	andeq	r0, r0, r0, rrx
 100:	20000200 	andcs	r0, r0, r0, lsl #4
 104:	00000050 	andeq	r0, r0, r0, asr r0
 108:	40080e41 	andmi	r0, r8, r1, asr #28
 10c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 110:	100e4101 	andne	r4, lr, r1, lsl #2
 114:	00070d41 	andeq	r0, r7, r1, asr #26
 118:	0000001c 	andeq	r0, r0, ip, lsl r0
 11c:	00000060 	andeq	r0, r0, r0, rrx
 120:	20000250 	andcs	r0, r0, r0, asr r2
 124:	00000016 	andeq	r0, r0, r6, lsl r0
 128:	40080e41 	andmi	r0, r8, r1, asr #28
 12c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 130:	100e4101 	andne	r4, lr, r1, lsl #2
 134:	00070d41 	andeq	r0, r7, r1, asr #26
 138:	0000001c 	andeq	r0, r0, ip, lsl r0
 13c:	00000060 	andeq	r0, r0, r0, rrx
 140:	20000266 	andcs	r0, r0, r6, ror #4
 144:	00000052 	andeq	r0, r0, r2, asr r0
 148:	40080e41 	andmi	r0, r8, r1, asr #28
 14c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 150:	100e4101 	andne	r4, lr, r1, lsl #2
 154:	00070d41 	andeq	r0, r7, r1, asr #26
 158:	0000000c 	andeq	r0, r0, ip
 15c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 160:	7c020001 	stcvc	0, cr0, [r2], {1}
 164:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 168:	00000018 	andeq	r0, r0, r8, lsl r0
 16c:	00000158 	andeq	r0, r0, r8, asr r1
 170:	200002b8 			; <UNDEFINED> instruction: 0x200002b8
 174:	00000040 	andeq	r0, r0, r0, asr #32
 178:	40080e41 	andmi	r0, r8, r1, asr #28
 17c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 180:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 184:	0000001c 	andeq	r0, r0, ip, lsl r0
 188:	00000158 	andeq	r0, r0, r8, asr r1
 18c:	200002f8 	strdcs	r0, [r0], -r8
 190:	0000002e 	andeq	r0, r0, lr, lsr #32
 194:	40080e41 	andmi	r0, r8, r1, asr #28
 198:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 19c:	180e4101 	stmdane	lr, {r0, r8, lr}
 1a0:	00070d41 	andeq	r0, r7, r1, asr #26
 1a4:	0000001c 	andeq	r0, r0, ip, lsl r0
 1a8:	00000158 	andeq	r0, r0, r8, asr r1
 1ac:	20000326 	andcs	r0, r0, r6, lsr #6
 1b0:	00000032 	andeq	r0, r0, r2, lsr r0
 1b4:	40080e41 	andmi	r0, r8, r1, asr #28
 1b8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 1bc:	180e4101 	stmdane	lr, {r0, r8, lr}
 1c0:	00070d41 	andeq	r0, r7, r1, asr #26
